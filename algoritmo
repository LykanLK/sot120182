



Verifica quem chegou (coloca-os na fila de prontos)


Se o tempo de IO acabou:
	Reseta tempo de IO
	Ajeita memória (de acordo com o algoritmo de substituição)
	Retira o processo da fila de IO
	Se for FIFO ou SJF:
		Coloca atual como este processo
	Senão:
		Coloca o processo na fila de prontos


Se tempo de overload acabou e quantum = 0 (preempção anterior terminou):
	Instante atual não será preempção (célula != X).
	Reseta tempo de overload.
	Reseta quantum.
	Coloca o processo atual de volta na fila.
	Processo atual agora é nulo.

Se o quantum acabou e precisa considerar sobrecarga
	Instante atual será preempção (célula = X)
	Decrementa o tempo de overload

Se o instante atual não for uma preempção
	Se processo atual for nulo:
		Se for FIFO ou SJF:
			Se a fila de prontos não está vazia e fila de IO está vazia:
				x <- Desinfileira a fila de prontos.
				Se x tem todas as páginas na memória:
					Seta x como atual.
				Senão:
					Coloca x na fila de IO.

		Senão:		
			Enquanto a fila de prontos não está vazia:
				x <- Desinfileira a fila de prontos.
				Se x tem todas as páginas na memória:
					Seta x como atual.
					Break.
				Senão:
					Coloca x na fila de IO

	Se o processo atual não for nulo:
		Executa o processo atual (célula = E ou L)
	Senão:
		(célula = " ")

Constrói a coluna na tabela

Se o processo atual terminou a execução neste instante:
	Reseta o quantum.
	Processo atual fica nulo.
Senão, se instante atual não é preempção:
	Decrementa o quantum

Se tem processo na fila de IO:
	Decrementa o tempo de IO